package hu.karaszi.ec.centralunit.controller.cep.eventmodel

import hu.karaszi.ec.centralunit.controller.cep.*
import-queries hu.karaszi.ec.centralunit.controller.model.incquery.*

queryEvent sensorEntersLowFatalRange(id: long) as sensorInLowFatalRange(_, id) found


queryEvent sensorEntersLowCriticalRange(id: long) as sensorInLowCriticalRange(_, id) found

queryEvent sensorEntersNormalRange(id: long) as sensorInNormalRange(_, id) found

queryEvent sensorEntersHighCriticalRange(id: long) as sensorInHighCriticalRange(_, id) found

queryEvent sensorEntersHighFatalRange(id: long)	as sensorInHighFatalRange(_, id) found

complexEvent RapidLowCriticalElevation(sensorId: long){
	as (sensorEntersLowFatalRange(id) -> sensorEntersLowCriticalRange(id))[100000]

}
complexEvent RapidNormalElevation(sensorId: long){
	as (sensorEntersLowCriticalRange(id) -> sensorEntersNormalRange(id))[100000]
}

complexEvent RapidElevation(sensorId: long){
	as (sensorEntersNormalRange(id) -> sensorEntersHighCriticalRange(id) -> sensorEntersHighFatalRange(id))[100000]
}

complexEvent RapidHighFatalElevation(sensorId: long){
	as (sensorEntersHighCriticalRange(id) -> sensorEntersHighFatalRange(id))[100000]
}

rule debugRapidEvelation on 
		//RapidLowCriticalElevation,
		//RapidNormalElevation,
		//RapidNormalElevation,
		RapidElevation
		//RapidHighFatalElevation 
//	action{
//		System.out.println("Rapid elevation @ sensor %s")
//	}
	{
		new ThresholdEventHandler().handle(ruleInstance)
}

////debug ////////////////////
//complexEvent sensorInLowFatalRange(sensorId: long){
//	as sensorEntersLowFatalRange(id)
//}
//
//complexEvent sensorInLowCriticalRange(sensorId: long){
//	as sensorEntersLowCriticalRange(id)
//}
//
//complexEvent debugInNormalRange(sensorId: long){
//	as sensorEntersNormalRange(id)
//}
//
//complexEvent sensorInHighCriticalRange(sensorId: long){
//	as sensorInHighCriticalRange(id)
//}
//
//complexEvent sensorInHighFatalRange(sensorId: long){
//	as sensorEntersHighCriticalRange(id)
//}
//
//rule debugSensorInLowFatalRange{
//	events: sensorInLowFatalRange
//	action{
//		System.out.println("sensorInLowFatalRange")
//	}
//}
//
//rule debugSensorInLowCriticalRange{
//	events: sensorEntersLowCriticalRange
//	action{
//		System.out.println("sensorEntersLowCriticalRange")
//	}
//}
//
//rule debugSensorInNormalRange{
//	events: debugInNormalRange
//	action{
//		System.out.println("sensorInNormalRange")
//	}
//}
//
//rule debugSensorInHighCriticalRange{
//	events: sensorInHighCriticalRange
//	action{
//		System.out.println("sensorInHighCriticalRange")
//	}
//}
//
//rule debugSensorInHighFatalRange{
//	events: sensorInHighFatalRange
//	action{
//		System.out.println("sensorInHighFatalRange")
//	}
//}
//
////end debug ///////////////
